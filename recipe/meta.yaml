{% set name = "gtk+" %}
{% set version = "3.24.21" %}
{% set version_majmin = '.'.join(version.split('.', 2)[:2]) %}

# Prior to conda-forge, Copyright 2014-2019 Peter Williams and collaborators.
# This file is licensed under a 3-clause BSD license; see LICENSE.txt.
package:
  name: gtk3  # note customization
  version: {{ version }}

source:
  url: https://download.gnome.org/sources/{{ name }}/{{ version_majmin }}/{{ name }}-{{ version }}.tar.xz
  sha256: aeea6ae7cd35e83dfc7699be716519faefca346c62e784dd1a37d9df94c08f52
  patches:
    - patches/m_pi.patch
    - patches/no-module-warning.patch
    # Update of the compiler to GCC 11.2 causes false positives out of bounds accesses.
    # taken from: https://github.com/msys2/MINGW-packages/commit/51bd1869e828906954b6afca4a46ca896c8b0d88
    - patches/0006-avoid-diagnostics-for-gcc-11-false-positive-out-of-bounds.patch  # [linux]

build:
  number: 8
  skip: true  # [win or s390x]; Not available on these architectures
  # workaround for bug in LIEF (https://github.com/lief-project/LIEF/issues/239)
  # that resulted in missing symbols
  rpaths_patcher: patchelf  # [linux]
  run_exports:
    - {{ pin_subpackage('gtk3', max_pin='x') }}
    # gtk apps need at least a default icon set for fallback
    - adwaita-icon-theme
  missing_dso_whitelist:
    - "*/libX11.so*"  # [linux]
    - "*/libXext.so*"  # [linux]
    - /usr/lib/libcups.2.dylib  # [osx]
  ignore_run_exports:
    - pixman

requirements:
  build:
    - meson  # [not win]
    # see https://github.com/conda-forge/meson-feedstock/issues/30
    - meson 0.53.2  # [win]
    - ninja
    - pkg-config
    - pthread-stubs  # [linux]
    - git  # [linux]
    - patch  # [linux]
    - cmake  # [linux]
    - cairo  # [linux]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # TODO: map CDT mesa-libEGL-devel to new X11 package
    # - { cdt('mesa-libEGL-devel') }
    # TODO: map CDT mesa-libGL-devel to new X11 package
    # - { cdt('mesa-libGL-devel') }
    - patch  # [not win]
    - m2-patch  # [win]
    - setuptools <74  # used in pythran.dist. distutils.msvccompiler removed in recent setuptools
  host:
    - atk >=2.36.0
    - cairo  {{ cairo }}
    - epoxy 1
    - freetype {{ freetype }}  # [not win]
    - fribidi 1
    - gdk-pixbuf 2
    - gettext 0.21.0  # [osx]
    - glib 2
    - gobject-introspection 1.*
    - harfbuzz {{ harfbuzz }}  # [not win]
    - libcups 2.*  # [linux]
    - libiconv 1  # [win]
    - pango 1.50.7
    # dependencies needed with x11 enabled
    - at-spi2-atk 2  # [linux]
    - fontconfig {{ fontconfig }}  # [linux]
    # dependencies needed with wayland enabled
    #- libxkbcommon                        # [linux]
    - xorg-libxau
    - xorg-libice
    - xorg-libsm
    - xorg-libx11
    - xorg-libxcomposite
    - xorg-libxcursor
    - xorg-libxdamage
    - xorg-libxext
    - xorg-libxi
    - xorg-libxinerama
    - xorg-libxfixes
    - xorg-libxrandr
    - xorg-libxrender
    - xorg-libxtst
    - xorg-xorgproto
    - mesa-libgl-devel
    - mesa-libegl-devel
  run:
    - gdk-pixbuf
    - glib
    - harfbuzz  # [not win]
    - hicolor-icon-theme
    - libcups  # [linux]
    - libiconv  # [win]
    - pango
    - glib-tools  # The post-links scripts use glib-tools

test:
  requires:
    - pkg-config
    # X11 libraries are already in host section
    # - pygobject  # For testing Python bindings
  commands:
    # check that the binaries can run
    - gtk-encode-symbolic-svg --help
    - gtk-launch --help
    - gtk-query-immodules-3.0
    - gtk-update-icon-cache --help
    # other binaries require a display, check that they get installed
    - command -v gtk-builder-tool  # [not win]
    - where gtk-builder-tool  # [win]
    - DISPLAY=localhost:1.0 xvfb-run -a gtk-query-settings  # [linux]
    - gtk-query-settings  # [not linux]

    # verify that (some) headers get installed
    - test -f $PREFIX/include/gail-3.0/libgail-util/gail-util.h      # [unix]
    - test -f $PREFIX/include/gtk-3.0/gdk/gdk.h                      # [unix]
    - test -f $PREFIX/include/gtk-3.0/gdk/x11/gdkx11window.h         # [linux]
    - test -f $PREFIX/include/gtk-3.0/gtk/gtk.h                      # [unix]
    - test -f $PREFIX/include/gtk-3.0/unix-print/gtk/gtkunixprint.h  # [unix]
    - if not exist %PREFIX%\\Library\\include\\gail-3.0\\libgail-util\\gail-util.h exit 1    # [win]
    - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gdk\\gdk.h exit 1                    # [win]
    - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gdk\\win32\\gdkwin32window.h exit 1  # [win]
    - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gtk\\gtk.h exit 1                    # [win]
    
    # verify that pkgconfig files get installed
    {% set pcs = [
        "gail-3.0",
        "gdk-3.0",
        "gtk+-3.0",
    ] %}
    {% set pcs = pcs + ["gtk+-unix-print-3.0"] %}                 # [unix]
    {% set pcs = pcs + ["gdk-x11-3.0", "gtk+-x11-3.0"] %}         # [linux]
    {% set pcs = pcs + ["gdk-quartz-3.0", "gtk+-quartz-3.0"] %}   # [osx]
    {% set pcs = pcs + ["gdk-win32-3.0", "gtk+-win32-3.0"] %}     # [win]
    {% for pc in pcs %}
    - test -f $PREFIX/lib/pkgconfig/{{ pc }}.pc                   # [unix]
    - if not exist %PREFIX%\\Library\\lib\\pkgconfig\\{{ pc }}.pc exit 1  # [win]
    {% endfor %}

    # verify that libs get installed and can be located through pkg-config
    {% set vs_major = dict(vs2015="14", vs2017="15", vs2019="16")[c_compiler] %}  # [win]
    {% set vs_major = "0.0" %}  # [not win]
    {% set pc_libs = [
        ("gail-3.0", "gailutil-3"),
        ("gdk-3.0", "gdk-3"),
        ("gtk+-3.0", "gtk-3"),
    ] %}
    {% for pc, lib in pc_libs %}
    - test -f $PREFIX/lib/lib{{ lib }}${SHLIB_EXT}  # [unix]
    - test -f `pkg-config --variable=libdir --dont-define-prefix {{ pc }}`/lib{{ lib }}${SHLIB_EXT}  # [unix]
    - if not exist %PREFIX%\\Library\\bin\\{{ lib }}-vs{{ vs_major }}.dll exit 1  # [win]
    - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=exec_prefix --dont-define-prefix {{ pc }}`) do if not exist "%%a/bin/{{ lib }}-vs{{ vs_major }}.dll" exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\{{ lib }}.lib exit 1  # [win]
    - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=libdir --dont-define-prefix {{ pc }}`) do if not exist "%%a/{{ lib }}.lib" exit 1  # [win]
    {% endfor %}
    
    # Generate the cache files during testing rather than checking for their existence
    # Since post-link scripts don't run during testing
    - ls -la $PREFIX/share/glib-2.0/schemas/ || true  # [not win]
    - mkdir -p $PREFIX/share/glib-2.0/schemas/  # [not win]
    - glib-compile-schemas $PREFIX/share/glib-2.0/schemas/  # [not win]
    
    - ls -la $PREFIX/share/icons/hicolor/ || true  # [not win]
    - mkdir -p $PREFIX/share/icons/hicolor/  # [not win]
    # Create a minimal icon theme structure to force cache creation
    - mkdir -p $PREFIX/share/icons/hicolor/16x16/apps/  # [not win]
    - mkdir -p $PREFIX/share/icons/hicolor/24x24/apps/  # [not win]
    - touch $PREFIX/share/icons/hicolor/16x16/apps/dummy.png  # [not win]
    # Force cache creation with --ignore-theme-index
    - gtk-update-icon-cache --force --ignore-theme-index $PREFIX/share/icons/hicolor/  # [not win]
    
    - ls -la $PREFIX/lib/gtk-3.0/3.0.0/ || true  # [not win]
    - mkdir -p $PREFIX/lib/gtk-3.0/3.0.0/  # [not win]
    - gtk-query-immodules-3.0 --update-cache  # [not win]
    
    - mkdir -p %PREFIX%\\Library\\share\\glib-2.0\\schemas\\  # [win]
    - glib-compile-schemas %PREFIX%\\Library\\share\\glib-2.0\\schemas\\  # [win]
    - mkdir -p %PREFIX%\\Library\\share\\icons\\hicolor\\16x16\\apps\\  # [win]
    - mkdir -p %PREFIX%\\Library\\share\\icons\\hicolor\\24x24\\apps\\  # [win]
    - echo "" > %PREFIX%\\Library\\share\\icons\\hicolor\\16x16\\apps\\dummy.png  # [win]
    - gtk-update-icon-cache --force --ignore-theme-index %PREFIX%\\Library\\share\\icons\\hicolor\\  # [win]
    - mkdir -p %PREFIX%\\Library\\lib\\gtk-3.0\\3.0.0\\  # [win]
    - gtk-query-immodules-3.0 --update-cache  # [win]
    
    # Now verify that the files were created
    - ls -la $PREFIX/share/glib-2.0/schemas/  # [not win]
    - test -f $PREFIX/share/glib-2.0/schemas/gschemas.compiled  # [not win]
    - if not exist %PREFIX%\\Library\\share\\glib-2.0\\schemas\\gschemas.compiled exit 1  # [win]
    
    - ls -la $PREFIX/share/icons/hicolor/  # [not win]
    - test -f $PREFIX/share/icons/hicolor/icon-theme.cache  # [not win]
    - if not exist %PREFIX%\\Library\\share\\icons\\hicolor\\icon-theme.cache exit 1  # [win]
    
    - ls -la $PREFIX/lib/gtk-3.0/3.0.0/  # [not win]
    - test -f $PREFIX/lib/gtk-3.0/3.0.0/immodules.cache  # [not win]
    - if not exist %PREFIX%\\Library\\lib\\gtk-3.0\\3.0.0\\immodules.cache exit 1  # [win]
    
    # run selected demos - disabled because they might depend on pygobject
    # {% set demos = ["application_demo", "clipboard", "cursors"] %}
    # {% set demos = demos + ["dialog", "drawingarea", "menus"] %}
    # {% set demos = demos + ["pixbufs"] %}
    # {% for demo in demos %}
    # - xvfb-run -a -s "-screen 0 1024x768x24" bash -c 'gtk3-demo --run {{ demo }} --autoquit'  # [linux]
    # - gtk3-demo --run {{ demo }} --autoquit  # [not linux]
    # {% endfor %}

about:
  home: https://www.gtk.org/
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: COPYING
  summary: Version 3 of the Gtk+ graphical toolkit
  description: |
    GTK is a multi-platform toolkit for creating graphical user interfaces.
    Offering a complete set of widgets, GTK is suitable for projects ranging
    from small one-off projects to complete application suites.
  doc_url: https://docs.gtk.org/gtk3/
  dev_url: https://gitlab.gnome.org/GNOME/gtk

extra:
  recipe-maintainers:
    - ryanvolz
    - stuarteberg
    - tschoonj